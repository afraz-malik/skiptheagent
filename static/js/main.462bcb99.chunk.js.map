{"version":3,"sources":["reportWebVitals.js","redux/reducers.js","redux/root-reducers.js","redux/store.js","components/spinner/spinner.jsx","App.js","redux/actions.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","url","rootReducer","combineReducers","URLReducer","state","action","type","Object","assign","payload","store","createStore","applyMiddleware","logger","Spinner","className","Home","lazy","Listing","Login","Register","ForgetPassword","OwnerShip","Details","Dashboard","App","this","props","setUrl","fallback","exact","path","component","React","Component","connect","dispatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,QCPRQ,EAAe,CACjBC,IAAK,MCOOC,EAJKC,YAAgB,CACjCC,WDFsB,WAAgC,IAA/BC,EAA8B,uDAAxBL,EAAcM,EAAU,uCACrD,OAAOA,EAAOC,MACV,IAAK,UACD,OAAOC,OAAOC,OAAO,GAAIJ,EAAO,CAACJ,IAAKK,EAAOI,UACjD,QACI,OAAOL,M,iBEHLM,EAAQC,YAAYV,EAAaW,YAAgBC,M,kFCSlDC,EAAU,WACnB,OACI,qBAAKC,UAAU,iBAAf,SACI,qBAAKA,UAAU,wBCFrBC,EAAOC,gBAAK,kBAAM,sDAClBC,EAAUD,gBAAK,kBAAM,8DACrBE,EAAQF,gBAAK,kBAAM,gCACnBG,EAAWH,gBAAK,kBAAM,gCACtBI,EAAiBJ,gBAAK,kBAC1B,iCAEIK,EAAYL,gBAAK,kBAAM,gCACvBM,EAAUN,gBAAK,kBAAM,uDACrBO,EAAYP,gBAAK,kBAAM,sDASvBQ,E,uKACJ,WAIEC,KAAKC,MAAMC,OAFC,0B,oBAId,WAAU,IACA5B,EAAQ0B,KAAKC,MAAb3B,IACR,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAU6B,SAAU,cAAC,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,UAAK/B,GAAOgC,UAAWhB,IACxC,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAI,UAAaC,UAAWd,IACzC,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAI,UAAK/B,EAAL,SAAiBgC,UAAWb,IAC7C,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAI,UAAK/B,EAAL,YAAoBgC,UAAWZ,IAChD,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAI,UAAK/B,EAAL,UAAkBgC,UAAWX,IAC9C,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAI,UAAK/B,EAAL,aAAqBgC,UAAWV,IACjD,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAI,UAAK/B,EAAL,WAAmBgC,UAAWT,IAC/C,cAAC,IAAD,CAAOQ,KAAI,UAAK/B,EAAL,aAAqBgC,UAAWR,e,GApBrCS,IAAMC,WA4BTC,eAnCS,SAAC/B,GAAD,MAAY,CAClCJ,IAAKI,EAAMD,WAAWH,QAEG,SAACoC,GAAD,MAAe,CACxCR,OAAQ,SAAC5B,GAAD,OAASoC,EC9BG,SAACpC,GAAD,MAAS,CAC3BM,KAAM,UACNG,QAAST,GD4Be4B,CAAO5B,QA+BpBmC,CAA6CV,GEpD5DY,IAASC,OACP,cAAC,IAAD,CAAU5B,MAAOA,EAAjB,SACE,cAAC,IAAM6B,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BnD,M","file":"static/js/main.462bcb99.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    url: null\r\n}\r\nexport const URLReducer = (state=initialState, action) =>{\r\n    switch(action.type){\r\n        case 'SET_URL':\r\n            return Object.assign({}, state, {url: action.payload})\r\n        default:\r\n            return state\r\n    }\r\n}","import {URLReducer} from './reducers'\r\nimport {combineReducers} from 'redux'\r\n\r\n\r\nconst rootReducer =  combineReducers({\r\n    URLReducer\r\n})\r\n\r\nexport default  rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './root-reducers'\r\nimport logger from 'redux-logger';\r\n\r\n\r\nexport  const store = createStore(rootReducer, applyMiddleware(logger));\r\n","import React from 'react';\r\nimport './spinner.scss'\r\n\r\nexport const SpinnerHOC = WrappedComponent => ({isLoading, ...otherProps}) =>(\r\n    isLoading\r\n    ?\r\n    <div className=\"SpinnerOverlay\">\r\n        <div className=\"SpinnerContainer\"/>\r\n    </div>\r\n    :\r\n    <WrappedComponent {...otherProps}>\r\n    </WrappedComponent>\r\n)\r\n\r\nexport const Spinner = () =>{\r\n    return (\r\n        <div className=\"SpinnerOverlay\">\r\n            <div className=\"SpinnerContainer\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { lazy, Suspense } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { setUrl } from './redux/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Spinner } from './components/spinner/spinner'\r\n//Pages\r\n// import Home from './pages/Home/Home'\r\n// import Listing from './pages/Listing/Listing'\r\n// import Login from './pages/LogIn/LogIn';\r\n// import Register from './pages/SignUp/SignUp'\r\n// import ForgetPassword from './pages/ForgetPassword/ForgetPassword'\r\n// import OwnerShip from './pages/Ownership/Ownership'\r\n// import Details from './pages/Details/Details'\r\n//Pages with React Lazy\r\nconst Home = lazy(() => import('./pages/Home/Home'))\r\nconst Listing = lazy(() => import('./pages/Listing/Listing'))\r\nconst Login = lazy(() => import('./pages/LogIn/LogIn'))\r\nconst Register = lazy(() => import('./pages/SignUp/SignUp'))\r\nconst ForgetPassword = lazy(() =>\r\n  import('./pages/ForgetPassword/ForgetPassword')\r\n)\r\nconst OwnerShip = lazy(() => import('./pages/Ownership/Ownership'))\r\nconst Details = lazy(() => import('./pages/Details/Details'))\r\nconst Dashboard = lazy(() => import('./pages/Dashboard/Dashboard'))\r\n\r\nconst mapStateToProps = (state) => ({\r\n  url: state.URLReducer.url,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setUrl: (url) => dispatch(setUrl(url)),\r\n})\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    // \"homepage\": \"https://afraz-malik.github.io/skiptheagent-react\",\r\n    const url = '/skiptheagent-react/'\r\n    // const url = '/'\r\n    this.props.setUrl(url)\r\n  }\r\n  render() {\r\n    const { url } = this.props\r\n    return (\r\n      <Router>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            <Route exact path={`${url}`} component={Home} />\r\n            <Route exact path={`listing`} component={Listing} />\r\n            <Route exact path={`${url}login`} component={Login} />\r\n            <Route exact path={`${url}register`} component={Register} />\r\n            <Route exact path={`${url}forget`} component={ForgetPassword} />\r\n            <Route exact path={`${url}ownership`} component={OwnerShip} />\r\n            <Route exact path={`${url}details`} component={Details} />\r\n            <Route path={`${url}dashboard`} component={Dashboard} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","export const setUrl = (url) =>({\r\n    type: 'SET_URL',\r\n    payload: url\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}
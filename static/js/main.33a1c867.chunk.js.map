{"version":3,"sources":["redux/user/user.actions.js","components/spinner/spinner.jsx","reportWebVitals.js","redux/user/user.reducers.js","redux/root-reducer.js","firebase/firebase.config.js","redux/user/user.saga.js","redux/root-saga.js","redux/store.js","App.js","index.js"],"names":["setUrl","url","type","payload","isUserAuthenticated","signUpStart","userCrendtial","signInStart","userCredential","signInWithGoogleStart","signInSuccess","signInFailed","error","signOutStart","signOutSuccess","signOutFailed","passwordResetAction","email","passwordResetSuccess","passwordResetFailed","err","Spinner","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialURLState","initialSignUpState","user","loading","success","rootReducer","combineReducers","URLReducer","state","action","Object","assign","setUser","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","googleProvider","auth","GoogleAuthProvider","firestore","createUserInFirebase","name","a","console","log","userRef","doc","uid","get","exists","displayName","updateProfile","e","catch","set","createdAt","Date","alert","message","settingUserPersistence","settingUserPersistenceStart","signUpWithEmail","signUpWithEmailStart","signInWithEmail","signInWithEmailStart","signInWithGoogleSaga","signOut","passwordResetStart","passwordReset","Promise","res","rej","unsub","onAuthStateChanged","snapshot","data","put","takeLatest","createUserWithEmailAndPassword","password","userCrendential","signInWithEmailAndPassword","signInWithPopup","sendPasswordResetEmail","rootSaga","all","call","sagaMiddleware","createSagaMiddleware","middleware","logger","store","createStore","applyMiddleware","run","Home","lazy","Listing","Login","Register","ForgetPassword","OwnerShip","Details","Dashboard","App","this","props","fallback","exact","path","component","render","to","React","Component","connect","dispatch","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33a1c867.chunk.js","sourcesContent":["export const setUrl = (url) => ({\r\n  type: 'SET_URL',\r\n  payload: url,\r\n})\r\nexport const isUserAuthenticated = () => ({\r\n  type: 'CHECKING_USER',\r\n})\r\nexport const signUpStart = (userCrendtial) => ({\r\n  type: 'SIGN_UP_START',\r\n  payload: userCrendtial,\r\n})\r\nexport const signInStart = (userCredential) => ({\r\n  type: 'SIGN_IN_START',\r\n  payload: userCredential,\r\n})\r\nexport const signInWithGoogleStart = () => ({\r\n  type: 'SIGN_IN_WITH_GOOGLE_START',\r\n})\r\nexport const signInSuccess = (userCredential) => ({\r\n  type: 'SIGN_IN_SUCCESS',\r\n  payload: userCredential,\r\n})\r\nexport const signInFailed = (error) => ({\r\n  type: 'SIGN_IN_FAILED',\r\n  payload: error,\r\n})\r\n\r\nexport const signOutStart = () => ({\r\n  type: 'SIGN_OUT_START',\r\n})\r\nexport const signOutSuccess = () => ({\r\n  type: 'SIGN_OUT_SUCCESS',\r\n})\r\nexport const signOutFailed = () => ({\r\n  type: 'SIGN_OUT_FAILED',\r\n})\r\n\r\nexport const passwordResetAction = (email) => ({\r\n  type: 'PASSWORD_RESET_START',\r\n  payload: email,\r\n})\r\nexport const passwordResetSuccess = () => ({\r\n  type: 'PASSWORD_RESET_SUCCESS',\r\n})\r\nexport const passwordResetFailed = (err) => ({\r\n  type: 'PASSWORD_RESET_FAILED',\r\n  payload: err,\r\n})\r\n","import React from 'react'\r\nimport './spinner.scss'\r\n\r\nexport const SpinnerHOC =\r\n  (WrappedComponent) =>\r\n  ({ isLoading, ...otherProps }) =>\r\n    isLoading ? (\r\n      <div className=\"SpinnerOverlay\">\r\n        <div className=\"SpinnerContainer\" />\r\n      </div>\r\n    ) : (\r\n      <WrappedComponent {...otherProps}></WrappedComponent>\r\n    )\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <div className=\"SpinnerOverlay\">\r\n      <div className=\"SpinnerContainer\" />\r\n    </div>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialURLState = {\r\n  url: null,\r\n}\r\nexport const URLReducer = (state = initialURLState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_URL':\r\n      return Object.assign({}, state, { url: action.payload })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialSignUpState = {\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n  success: 0,\r\n}\r\nexport const setUser = (state = initialSignUpState, action) => {\r\n  switch (action.type) {\r\n    case 'SIGN_UP_START':\r\n    case 'SIGN_IN_START':\r\n    case 'SIGN_OUT_START':\r\n    case 'SIGN_IN_WITH_GOOGLE_START':\r\n    case 'PASSWORD_RESET_START':\r\n      return Object.assign({}, state, { loading: true, success: 0 })\r\n    case 'SIGN_IN_SUCCESS':\r\n      return Object.assign({}, state, {\r\n        loading: false,\r\n        user: action.payload,\r\n        error: null,\r\n        success: 1,\r\n      })\r\n    case 'SIGN_OUT_SUCCESS':\r\n    case 'PASSWORD_RESET_SUCCESS':\r\n      return Object.assign({}, state, {\r\n        loading: null,\r\n        user: null,\r\n        error: null,\r\n        success: 1,\r\n      })\r\n\r\n    case 'SIGN_IN_FAILED':\r\n    case 'SIGN_OUT_FAILED':\r\n    case 'PASSWORD_RESET_FAILED':\r\n      return Object.assign({}, state, {\r\n        loading: false,\r\n        error: action.payload,\r\n        success: 0,\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { URLReducer, setUser } from './user/user.reducers'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n  URLReducer,\r\n  setUser,\r\n})\r\n\r\nexport default rootReducer\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/analytics'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyBu1x4tu6iZPxhkANVuOxzJtjcLBzKW5lc',\r\n  authDomain: 'skiptheagent-react.firebaseapp.com',\r\n  projectId: 'skiptheagent-react',\r\n  storageBucket: 'skiptheagent-react.appspot.com',\r\n  messagingSenderId: '470859456457',\r\n  appId: '1:470859456457:web:db0de858f2e69e70b1d218',\r\n  measurementId: 'G-N1ZG0Z7E9P',\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\nfirebase.analytics()\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider()\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider)\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\nexport const isUserAuthenticated = () => {\r\n  return new Promise((res, rej) => {\r\n    const unsub = auth.onAuthStateChanged((user) => {\r\n      unsub()\r\n      res(user)\r\n    }, rej)\r\n  })\r\n}\r\n\r\nexport const createUserInFirebase = async (user, name) => {\r\n  if (!user) {\r\n    console.log('No user found')\r\n    return\r\n  }\r\n  const userRef = firestore.doc(`users/${user.uid}`)\r\n  const snapshot = await userRef.get()\r\n  let displayName\r\n  if (!snapshot.exists) {\r\n    if (user.displayName) {\r\n      displayName = user.displayName\r\n    } else {\r\n      displayName = name\r\n      user\r\n        .updateProfile({\r\n          displayName: displayName,\r\n        })\r\n        .then((e) => console.log('displayname set'))\r\n        .catch((err) => console.log(err))\r\n    }\r\n    userRef\r\n      .set({\r\n        displayName: displayName,\r\n        email: user.email,\r\n        createdAt: new Date(),\r\n      })\r\n\r\n      .catch((err) => {\r\n        alert(err.message)\r\n      })\r\n  } else {\r\n    console.log('not overwrited')\r\n  }\r\n  return userRef\r\n}\r\n","import { put, takeLatest } from 'redux-saga/effects'\r\nimport {\r\n  signInFailed,\r\n  signInSuccess,\r\n  signOutSuccess,\r\n  signOutFailed,\r\n  passwordResetSuccess,\r\n  passwordResetFailed,\r\n} from './user.actions'\r\nimport {\r\n  auth,\r\n  isUserAuthenticated,\r\n  createUserInFirebase,\r\n  signInWithGoogle,\r\n} from '../../firebase/firebase.config'\r\n\r\nexport function* settingUserPersistence() {\r\n  const user = yield isUserAuthenticated()\r\n  const userRef = yield createUserInFirebase(user)\r\n  if (userRef) {\r\n    const snapshot = yield userRef.get()\r\n    const user = snapshot.data()\r\n    yield put(signInSuccess({ email: user.email, name: user.displayName }))\r\n  }\r\n}\r\nexport function* settingUserPersistenceStart() {\r\n  yield takeLatest('CHECKING_USER', settingUserPersistence)\r\n}\r\n\r\nexport function* signUpWithEmail({ payload }) {\r\n  let user\r\n  let error\r\n  yield auth\r\n    .createUserWithEmailAndPassword(payload.email, payload.password)\r\n    .then((userCrendential) => {\r\n      user = userCrendential.user\r\n    })\r\n    .catch((err) => {\r\n      alert(err.message)\r\n      error = err\r\n    })\r\n  if (error) {\r\n    yield put(signInFailed({ error }))\r\n  }\r\n  if (user) {\r\n    yield createUserInFirebase(user, payload.name)\r\n    yield put(signInSuccess({ name: payload.name, email: payload.email }))\r\n  }\r\n}\r\nexport function* signUpWithEmailStart() {\r\n  yield takeLatest('SIGN_UP_START', signUpWithEmail)\r\n}\r\nexport function* signInWithEmail({ payload }) {\r\n  let user\r\n  let error = null\r\n  yield auth\r\n    .signInWithEmailAndPassword(payload.email, payload.password)\r\n    .then((userCrendential) => {\r\n      user = userCrendential.user\r\n    })\r\n    .catch((err) => {\r\n      alert(err.message)\r\n      error = err\r\n    })\r\n  if (error) {\r\n    yield put(signInFailed({ error }))\r\n  }\r\n  if (user) {\r\n    yield put(signInSuccess({ name: user.displayName, email: user.email }))\r\n  }\r\n}\r\n\r\nexport function* signInWithEmailStart() {\r\n  yield takeLatest('SIGN_IN_START', signInWithEmail)\r\n}\r\nexport function* signInWithGoogleSaga() {\r\n  try {\r\n    const { user } = yield signInWithGoogle()\r\n    yield createUserInFirebase(user)\r\n    yield put(signInSuccess({ name: user.displayName, email: user.email }))\r\n  } catch (err) {\r\n    yield put(signInFailed(err.message))\r\n    yield alert(err.message)\r\n  }\r\n}\r\nexport function* signInWithGoogleStart() {\r\n  yield takeLatest('SIGN_IN_WITH_GOOGLE_START', signInWithGoogleSaga)\r\n}\r\nexport function* signOut() {\r\n  // let user\r\n  // let error = null\r\n  try {\r\n    yield auth.signOut()\r\n    yield put(signOutSuccess())\r\n  } catch (err) {\r\n    yield alert(err)\r\n    yield put(signOutFailed({ err }))\r\n  }\r\n}\r\nexport function* signOutStart() {\r\n  yield takeLatest('SIGN_OUT_START', signOut)\r\n}\r\nexport function* passwordResetStart({ payload }) {\r\n  try {\r\n    yield auth.sendPasswordResetEmail(payload.email)\r\n    yield put(passwordResetSuccess())\r\n  } catch (err) {\r\n    yield put(passwordResetFailed(err))\r\n    alert(err.message)\r\n  }\r\n}\r\nexport function* passwordReset() {\r\n  yield takeLatest('PASSWORD_RESET_START', passwordResetStart)\r\n}\r\n","import { all, call } from 'redux-saga/effects'\r\nimport {\r\n  signUpWithEmailStart,\r\n  signInWithEmailStart,\r\n  settingUserPersistenceStart,\r\n  signOutStart,\r\n  signInWithGoogleStart,\r\n  passwordReset,\r\n} from './user/user.saga'\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    call(signUpWithEmailStart),\r\n    call(signInWithEmailStart),\r\n    call(settingUserPersistenceStart),\r\n    call(signOutStart),\r\n    call(signInWithGoogleStart),\r\n    call(passwordReset),\r\n  ])\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\n\r\n//Middlewares\r\nimport logger from 'redux-logger'\r\nimport createSagaMiddleware from '@redux-saga/core'\r\n\r\n//Redux\r\nimport rootReducer from './root-reducer'\r\nimport rootSaga from './root-saga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middleware = [sagaMiddleware, logger]\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleware))\r\nsagaMiddleware.run(rootSaga)\r\n","import React, { lazy, Suspense } from 'react'\r\n//React Router\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  BrowserRouter as Router,\r\n} from 'react-router-dom'\r\n\r\n//Redux\r\nimport { connect } from 'react-redux'\r\nimport { setUrl, isUserAuthenticated } from './redux/user/user.actions'\r\n\r\n//Components\r\nimport { Spinner } from './components/spinner/spinner'\r\n\r\n//Pages\r\n// import Home from './pages/Home/Home'\r\n// import Listing from './pages/Listing/Listing'\r\n// import Login from './pages/LogIn/LogIn';\r\n// import Register from './pages/SignUp/SignUp'\r\n// import ForgetPassword from './pages/ForgetPassword/ForgetPassword'\r\n// import OwnerShip from './pages/Ownership/Ownership'\r\n// import Details from './pages/Details/Details'\r\n\r\n//Pages with React Lazy\r\nconst Home = lazy(() => import('./pages/Home/Home'))\r\nconst Listing = lazy(() => import('./pages/Listing/Listing'))\r\nconst Login = lazy(() => import('./pages/LogIn/LogIn'))\r\nconst Register = lazy(() => import('./pages/SignUp/SignUp'))\r\nconst ForgetPassword = lazy(() =>\r\n  import('./pages/ForgetPassword/ForgetPassword')\r\n)\r\nconst OwnerShip = lazy(() => import('./pages/Ownership/Ownership'))\r\nconst Details = lazy(() => import('./pages/Details/Details'))\r\nconst Dashboard = lazy(() => import('./pages/Dashboard/Dashboard'))\r\n\r\nconst mapStateToProps = (state) => ({\r\n  url: state.URLReducer.url,\r\n  user: state.setUser.user,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setUrl: (url) => dispatch(setUrl(url)),\r\n  isUserAuthenticated: () => dispatch(isUserAuthenticated()),\r\n})\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    // \"homepage\": \"https://afraz-malik.github.io/skiptheagent-react\",\r\n    const url = '/skiptheagent-react/'\r\n    // const url = '/'\r\n\r\n    this.props.setUrl(url)\r\n    this.props.isUserAuthenticated()\r\n  }\r\n  render() {\r\n    const { url, user } = this.props\r\n    return (\r\n      <Router>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            <Route exact path={`${url}`} component={Home} />\r\n            <Route exact path={`${url}listing`} component={Listing} />\r\n            <Route\r\n              exact\r\n              path={`${url}login`}\r\n              render={() =>\r\n                user ? <Redirect to={`${url}dashboard`} /> : <Login />\r\n              }\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${url}register`}\r\n              render={() =>\r\n                user ? <Redirect to={`${url}dashboard`} /> : <Register />\r\n              }\r\n            />\r\n            <Route exact path={`${url}forget`} component={ForgetPassword} />\r\n            <Route exact path={`${url}ownership`} component={OwnerShip} />\r\n            <Route exact path={`${url}details`} component={Details} />\r\n            <Route\r\n              path={`${url}dashboard`}\r\n              render={() =>\r\n                !user ? <Redirect to={`${url}login`} /> : <Dashboard />\r\n              }\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { store } from './redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}